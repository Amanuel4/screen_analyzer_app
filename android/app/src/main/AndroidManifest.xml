<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.screen_analyzer_flutter_app"> <!-- Make sure this matches your app's package name -->

    <!-- Permissions for Internet access -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- Permissions for image_picker to access gallery -->
    <!-- For Android 13 (API 33) and above - Granular Media Permissions -->
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />

    <!-- For older Android versions (below Android 13) for reading from storage -->
    <!-- maxSdkVersion="32" means this permission is requested only up to Android 12L (API 32) -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" android:maxSdkVersion="32" />
    
    <!-- 
        WRITE_EXTERNAL_STORAGE is often not strictly needed for just picking images,
        but some older plugins or specific scenarios might have expected it.
        Setting maxSdkVersion="28" limits it to Android 9 (Pie) and below, 
        as Scoped Storage significantly changed write access from Android 10 onwards.
        If image_picker works without it, you can omit it for better privacy.
        Let's include it for now with maxSdkVersion for broader compatibility if an older plugin version implicitly needs it.
    -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" android:maxSdkVersion="28" />

    <!-- 
        Permissions for potential native screen capture (MediaProjection).
        While our example uses image_picker to simulate this, if you were to implement
        actual MediaProjection, these would be relevant.
        Foreground service permission is needed for ongoing operations like screen recording
        on Android 10+ if the app is not in the foreground.
        For single screenshot capture via MediaProjection, it might not always be mandatory
        but is good practice if the capture process is initiated from a service.
    -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <!-- Required for apps targeting Android 14 (API 34) and above if using MediaProjection -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PROJECTION" />


    <application
        android:label="screen_analyzer_flutter_app" 
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher"
        android:requestLegacyExternalStorage="true"> <!-- Important for image_picker on Android 10 if not using READ_MEDIA_IMAGES exclusively or if plugin targets older APIs -->
        
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
    <!-- The Flutter tool MainAxisAlignment.center, this. -->
    <!-- All rights reserved. -->
</manifest>